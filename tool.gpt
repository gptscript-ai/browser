export: browse, getPageContents, getPageImages, click, fill, check, select, enter, login, scroll, close, screenshot
description: A toolset that can be used to browse and navigate websites.

---
name: browse
description: Navigates to a website, but does not return the content.
args: website: The URL of the website to visit. Must be an HTTPS URL.
args: headless: Whether to launch actual browser. Set to false unless asked otherwise.
args: pageID: (optional) The ID of the page. If unspecified, a new page will be created.
tools: service

#!http://service.daemon.gptscript.local/browse

---
name: getPageContents
description: Navigates to a website and returns its HTML content.
args: website: (optional) The HTTPS URL of the website to visit. If unspecified, the current page will be used.
args: headless: Whether to launch actual browser. Set to false unless asked otherwise.
args: pageID: (optional) The ID of the page. If unspecified, a new page will be created.
tools: service

#!http://service.daemon.gptscript.local/getPageContents

---
name: getPageImages
description: Navigates to a website and returns all the img tags in raw HTML, including their source URLs.
args: website: The URL of the website to visit. Must be an HTTPS URL.
args: headless: Whether to launch actual browser. Set to false unless asked otherwise.
args: pageID: (optional) The ID of the page. If unspecified, a new page will be created.
tools: service

#!http://service.daemon.gptscript.local/getPageImages

---
name: login
description: login a website.
args: website: the website url to browse. The url should have https protocol prepend.
tools: service

#!http://service.daemon.gptscript.local/login

---
name: click
description: Clicks elements on the web page.
args: userInput: (required) Description of the element to click on. This will be used by the AI to determine which element to pick from the results. Be as detailed as possible.
args: keywords: (required) Comma-separated list of keywords related to the element. These will be used to search for the element on the page.
args: matchTextOnly: (optional) Only look for the keywords in the actual text inside of the elements. Useful in cases where the user has described text appearing on the page.
args: allElements: (optional, default false) Clicks on all elements that match the description, instead of only the first.
args: pageID: (optional) The ID of the page. If unspecified, a new page will be created.
tools: service

#!http://service.daemon.gptscript.local/click

---
name: fill
description: Fills text into an element on the web page.
args: userInput: (required) Description of the element to fill. This will be used by the AI to determine which element to pick from the results. Be as detailed as possible.
args: keywords: (required) Comma-separated list of keywords related to the element. These will be used to search for the element on the page.
args: matchTextOnly: (optional) Only look for the keywords in the actual text inside of the elements. Useful in cases where the user has described text appearing on the page.
args: content: The text to fill into the element.
args: pageID: (optional) The ID of the page. If unspecified, a new page will be created.
tools: service

#!http://service.daemon.gptscript.local/fill

---
name: enter
description: Presses the enter key. Useful after filling out a form or other input.
args: pageID: (optional) The ID of the page. If unspecified, a new page will be created.
tools: service

#!http://service.daemon.gptscript.local/enter

---
name: scroll
description: Loads more content by scrolling to the bottom of the page. Useful for sites like Reddit which support infinite scroll.
args: pageID: (optional) The ID of the page. If unspecified, a new page will be created.
tools: service

#!http://service.daemon.gptscript.local/scrollToBottom

---
name: check
description: Checks a radio button on the web page.
args: userInput: (required) Description of the element to check. This will be used by the AI to determine which element to pick from the results. Be as detailed as possible.
args: keywords: (required) Comma-separated list of keywords related to the element. These will be used to search for the element on the page.
args: matchTextOnly: (optional) Only look for the keywords in the actual text inside of the elements. Useful in cases where the user has described text appearing on the page.
args: pageID: (optional) The ID of the page. If unspecified, a new page will be created.
tools: service

#!http://service.daemon.gptscript.local/check

---
name: select
description: Selects an option from a dropdown menu.
args: userInput: (required) Description of the element to select from.
args: option: The option to choose in the dropdown.
args: pageID: (optional) The ID of the page. If unspecified, a new page will be created.
tools: service

#!http://service.daemon.gptscript.local/select

---
name: close
description: Closes a page.
args: pageID: (required) The ID of the page to close.
tools: service

#!http://service.daemon.gptscript.local/close

---
name: screenshot
description: Takes a screenshot of an element. Saves it as a PNG file in the current workspace
args: userInput: (required) Description of the element to screenshot. This will be used by the AI to determine which element to pick from the results. Be as detailed as possible.
args: keywords: (required) Comma-separated list of keywords related to the element. These will be used to search for the element on the page.
args: pageID: (optional) The ID of the page. If unspecified, a new page will be created.
args: filename: (optional) The name of the file to create. Defaults to screenshot.png
tools: service

#!http://service.daemon.gptscript.local/screenshot

---
name: service

#!sys.daemon /usr/bin/env npm --prefix ${GPTSCRIPT_TOOL_DIR} run server
